/universities:
  get:
    summary: Get all universities
    description: Retrieve a list of all universities with optional filtering
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/page'
      - $ref: '../openapi.yaml#/components/parameters/limit'
      - $ref: '../openapi.yaml#/components/parameters/search'
    responses:
      '200':
        description: List of universities retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../components/schemas/University.yaml#/University'
                pagination:
                  $ref: '../openapi.yaml#/components/schemas/Pagination'
      '500':
        $ref: '../openapi.yaml#/components/responses/ServerError'

  post:
    summary: Create a new university
    description: Create a new university with logo and details
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
                maxLength: 150
                description: Name of the university
              description:
                type: string
                maxLength: 1000
                description: Detailed description of the university
              location:
                type: string
                maxLength: 200
                description: Location of the university
              websiteUrl:
                type: string
                format: uri
                description: Official website URL of the university
              contactEmail:
                type: string
                format: email
                description: Official contact email of the university
              contactPhone:
                type: string
                description: Official contact phone number
              logo:
                type: string
                format: binary
                description: University logo (max 2MB, image files only)
              universityAdmins:
                type: array
                items:
                  type: string
                  format: uuid
                description: List of university administrator IDs
              status:
                type: string
                enum: [pending_approval, active, suspended, inactive]
                description: Status of the university
    responses:
      '201':
        description: University created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas/University.yaml#/University'
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
      '403':
        $ref: '../openapi.yaml#/components/responses/ForbiddenError'
      '500':
        $ref: '../openapi.yaml#/components/responses/ServerError'

  /{universityId}:
    parameters:
      - name: universityId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the university
    get:
      summary: Get university details
      description: Retrieve details of a specific university
      responses:
        '200':
          description: University details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '../components/schemas/University.yaml#/University'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError'

    put:
      summary: Update university details
      description: Update details of a specific university
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 150
                  description: Name of the university
                description:
                  type: string
                  maxLength: 1000
                  description: Detailed description of the university
                location:
                  type: string
                  maxLength: 200
                  description: Location of the university
                websiteUrl:
                  type: string
                  format: uri
                  description: Official website URL of the university
                contactEmail:
                  type: string
                  format: email
                  description: Official contact email of the university
                contactPhone:
                  type: string
                  description: Official contact phone number
                logo:
                  type: string
                  format: binary
                  description: University logo (max 2MB, image files only)
                universityAdmins:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: List of university administrator IDs
                status:
                  type: string
                  enum: [pending_approval, active, suspended, inactive]
                  description: Status of the university
      responses:
        '200':
          description: University updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '../components/schemas/University.yaml#/University'
        '400':
          $ref: '../openapi.yaml#/components/responses/ValidationError'
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: '../openapi.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError'

    delete:
      summary: Delete university
      description: Delete a university and all its associated data
      security:
        - BearerAuth: []
      responses:
        '200':
          description: University deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: University deleted successfully
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '403':
          $ref: '../openapi.yaml#/components/responses/ForbiddenError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError' 
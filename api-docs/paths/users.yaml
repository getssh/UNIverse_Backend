/users:
  /{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the user
    get:
      summary: Get user details
      description: Retrieve details of a specific user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '../components/schemas/User.yaml#/User'
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError'

    put:
      summary: Update user details
      description: Update details of a specific user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User's full name
                department:
                  type: string
                  description: User's department
                faculty:
                  type: string
                  description: User's faculty
                studyLevel:
                  type: string
                  enum: [undergraduate, graduate, PhD]
                  description: User's study level
                gender:
                  type: string
                  enum: [male, female, other]
                  description: User's gender
                phoneNumber:
                  type: string
                  description: User's phone number
                profilePic:
                  type: string
                  format: binary
                  description: Profile picture (max 5MB, image files only)
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '../components/schemas/User.yaml#/User'
        '400':
          $ref: '../openapi.yaml#/components/responses/ValidationError'
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError'

    delete:
      summary: Delete user
      description: Delete a user's account
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User deleted successfully
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError'

  /forgot-password:
    post:
      summary: Request password reset
      description: Send a password reset link to the user's email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
      responses:
        '200':
          description: Password reset email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password reset email sent
        '400':
          $ref: '../openapi.yaml#/components/responses/ValidationError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError'

  /reset-password:
    post:
      summary: Reset password
      description: Reset user's password using the reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
              properties:
                token:
                  type: string
                  description: Password reset token
                password:
                  type: string
                  minLength: 8
                  description: New password (min 8 characters)
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Password reset successful
        '400':
          $ref: '../openapi.yaml#/components/responses/ValidationError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError' 
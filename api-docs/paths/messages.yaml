/:
  get:
    tags:
      - Messages
    summary: Get all messages
    description: Retrieve a list of all messages across all chats
    security:
      - BearerAuth: []
    parameters:
      - $ref: '../components/parameters/commonParameters.yaml#/page'
      - $ref: '../components/parameters/commonParameters.yaml#/limit'
      - name: chatId
        in: query
        schema:
          type: string
          format: uuid
        description: Filter messages by chat ID
      - name: userId
        in: query
        schema:
          type: string
          format: uuid
        description: Filter messages by sender ID
      - name: type
        in: query
        schema:
          type: string
          enum: [text, image, file]
        description: Filter messages by type
    responses:
      '200':
        description: List of messages retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                messages:
                  type: array
                  items:
                    $ref: '../components/schemas/Message.yaml#/Message'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '500':
        $ref: '../components/responses/commonResponses.yaml#/ServerError'

  post:
    tags:
      - Messages
    summary: Send a message
    description: Send a new message in a chat
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - chatId
            properties:
              chatId:
                type: string
                format: uuid
                description: ID of the chat to send message to
              content:
                type: string
                maxLength: 2000
                description: Content of the message (required if no file)
              file:
                type: string
                format: binary
                description: File to attach to the message
              replyTo:
                type: string
                format: uuid
                description: ID of the message being replied to
    responses:
      '201':
        description: Message sent successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  $ref: '../components/schemas/Message.yaml#/Message'
      '400':
        $ref: '../components/responses/commonResponses.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'

/{chatId}:
  get:
    tags:
      - Messages
    summary: Get chat messages
    description: Retrieve messages for a specific chat with pagination
    security:
      - BearerAuth: []
    parameters:
      - name: chatId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the chat
      - $ref: '../components/parameters/commonParameters.yaml#/page'
      - $ref: '../components/parameters/commonParameters.yaml#/limit'
    responses:
      '200':
        description: Messages retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                messages:
                  type: array
                  items:
                    $ref: '../components/schemas/Message.yaml#/Message'
                pagination:
                  $ref: '../components/schemas/Pagination.yaml#/Pagination'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'

/{messageId}:
  get:
    tags:
      - Messages
    summary: Get message by ID
    description: Retrieve a message's details by its ID
    security:
      - BearerAuth: []
    parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the message
    responses:
      '200':
        description: Message details retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  $ref: '../components/schemas/Message.yaml#/Message'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'

  put:
    tags:
      - Messages
    summary: Edit message
    description: Edit a message's content (only allowed within 5 minutes of sending)
    security:
      - BearerAuth: []
    parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the message
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - content
            properties:
              content:
                type: string
                maxLength: 2000
                description: New content of the message
    responses:
      '200':
        description: Message edited successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  $ref: '../components/schemas/Message.yaml#/Message'
      '400':
        $ref: '../components/responses/commonResponses.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '403':
        $ref: '../components/responses/commonResponses.yaml#/ForbiddenError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'

  delete:
    tags:
      - Messages
    summary: Delete message
    description: Delete a message (only allowed for message sender)
    security:
      - BearerAuth: []
    parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the message
    responses:
      '200':
        description: Message deleted successfully
        content:
          application/json:
            schema:
              $ref: '../components/responses/commonResponses.yaml#/Success'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '403':
        $ref: '../components/responses/commonResponses.yaml#/ForbiddenError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'

/{messageId}/attachments:
  post:
    tags:
      - Messages
    summary: Add attachment
    description: Add an attachment to a message
    security:
      - BearerAuth: []
    parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the message
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - file
            properties:
              file:
                type: string
                format: binary
                description: The file to attach
    responses:
      '201':
        description: Attachment added successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                attachment:
                  $ref: '../components/schemas/Message.yaml#/MessageAttachment'
      '400':
        $ref: '../components/responses/commonResponses.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '403':
        $ref: '../components/responses/commonResponses.yaml#/ForbiddenError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'

/{messageId}/attachments/{attachmentId}:
  delete:
    tags:
      - Messages
    summary: Remove attachment
    description: Remove an attachment from a message
    security:
      - BearerAuth: []
    parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the message
      - name: attachmentId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the attachment
    responses:
      '200':
        description: Attachment removed successfully
        content:
          application/json:
            schema:
              $ref: '../components/responses/commonResponses.yaml#/Success'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '403':
        $ref: '../components/responses/commonResponses.yaml#/ForbiddenError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'

/{messageId}/reactions:
  get:
    tags:
      - Messages
    summary: Get message reactions
    description: Retrieve all reactions for a message
    security:
      - BearerAuth: []
    parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the message
    responses:
      '200':
        description: Reactions retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                reactions:
                  type: array
                  items:
                    $ref: '../components/schemas/Message.yaml#/MessageReaction'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'

  post:
    tags:
      - Messages
    summary: Add reaction
    description: Add a reaction to a message
    security:
      - BearerAuth: []
    parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the message
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - emoji
            properties:
              emoji:
                type: string
                description: The emoji to use as reaction
    responses:
      '201':
        description: Reaction added successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                reaction:
                  $ref: '../components/schemas/Message.yaml#/MessageReaction'
      '400':
        $ref: '../components/responses/commonResponses.yaml#/ValidationError'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'
      '409':
        $ref: '../components/responses/commonResponses.yaml#/ConflictError'

/{messageId}/reactions/{reactionId}:
  delete:
    tags:
      - Messages
    summary: Remove reaction
    description: Remove a reaction from a message
    security:
      - BearerAuth: []
    parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the message
      - name: reactionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the reaction
    responses:
      '200':
        description: Reaction removed successfully
        content:
          application/json:
            schema:
              $ref: '../components/responses/commonResponses.yaml#/Success'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '403':
        $ref: '../components/responses/commonResponses.yaml#/ForbiddenError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError'

/read/{chatId}:
  put:
    tags:
      - Messages
    summary: Mark messages as read
    description: Mark all messages in a chat as read for the current user
    security:
      - BearerAuth: []
    parameters:
      - name: chatId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the chat
    responses:
      '200':
        description: Messages marked as read successfully
        content:
          application/json:
            schema:
              $ref: '../components/responses/commonResponses.yaml#/Success'
      '401':
        $ref: '../components/responses/commonResponses.yaml#/UnauthorizedError'
      '404':
        $ref: '../components/responses/commonResponses.yaml#/NotFoundError' 
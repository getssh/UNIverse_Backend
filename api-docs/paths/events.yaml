/events:
  get:
    summary: Get all events
    description: Retrieve a list of all events with optional filtering
    security:
      - BearerAuth: []
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/page'
      - $ref: '../openapi.yaml#/components/parameters/limit'
      - $ref: '../openapi.yaml#/components/parameters/search'
      - name: type
        in: query
        schema:
          type: string
          enum: [workshop, seminar, conference, webinar, social, career_fair, other]
        description: Filter by event type
      - name: status
        in: query
        schema:
          type: string
          enum: [upcoming, ongoing, past, cancelled, postponed]
        description: Filter by event status
      - name: universityId
        in: query
        schema:
          type: string
          format: uuid
        description: Filter by university ID
      - name: isOnline
        in: query
        schema:
          type: boolean
        description: Filter by online/physical events
      - name: dateRange
        in: query
        schema:
          type: string
          enum: [today, this_week, this_month, upcoming]
        description: Filter by date range
      - name: sort
        in: query
        schema:
          type: string
          enum: [startDateTime, endDateTime, createdAt]
        description: Sort field
      - name: order
        in: query
        schema:
          type: string
          enum: [asc, desc]
          default: asc
        description: Sort order
    responses:
      '200':
        description: List of events retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../components/schemas/Event.yaml#/Event'
                pagination:
                  $ref: '../openapi.yaml#/components/schemas/Pagination'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
      '500':
        $ref: '../openapi.yaml#/components/responses/ServerError'

  post:
    summary: Create a new event
    description: Create a new event with the provided details
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - title
              - description
              - type
              - startDateTime
              - endDateTime
              - location
            properties:
              title:
                type: string
                description: Title of the event
              description:
                type: string
                description: Detailed description of the event
              type:
                type: string
                enum: [workshop, seminar, conference, webinar, social, career_fair, other]
                description: Type of the event
              startDateTime:
                type: string
                format: date-time
                description: Start date and time of the event
              endDateTime:
                type: string
                format: date-time
                description: End date and time of the event
              location:
                type: object
                required:
                  - isOnline
                properties:
                  isOnline:
                    type: boolean
                    description: Whether the event is online or physical
                  address:
                    type: string
                    description: Physical address for physical events
                  city:
                    type: string
                    description: City for physical events
                  stateOrProvince:
                    type: string
                    description: State or province for physical events
                  postalCode:
                    type: string
                    description: Postal code for physical events
                  country:
                    type: string
                    description: Country for physical events
                  meetingUrl:
                    type: string
                    format: uri
                    description: Online meeting link for online events
                  locationUrl:
                    type: string
                    format: uri
                    description: URL for physical location
                  additionalDetails:
                    type: string
                    description: Additional location details
              maxAttendees:
                type: integer
                minimum: 1
                description: Maximum number of attendees allowed
              registrationDeadline:
                type: string
                format: date-time
                description: Deadline for event registration
              registrationLink:
                type: string
                format: uri
                description: Link for event registration
              coverImage:
                type: string
                format: binary
                description: Cover image for the event
    responses:
      '201':
        description: Event created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  $ref: '../components/schemas/Event.yaml#/Event'
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
      '500':
        $ref: '../openapi.yaml#/components/responses/ServerError'

  /{eventId}:
    parameters:
      - name: eventId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the event
    get:
      summary: Get event details
      description: Retrieve details of a specific event
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Event details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '../components/schemas/Event.yaml#/Event'
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError'

    put:
      summary: Update event details
      description: Update details of a specific event
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../components/schemas/Event.yaml#/Event'
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '../components/schemas/Event.yaml#/Event'
        '400':
          $ref: '../openapi.yaml#/components/responses/ValidationError'
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError'

    delete:
      summary: Delete event
      description: Delete a specific event
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Event deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Event deleted successfully
        '401':
          $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
        '404':
          $ref: '../openapi.yaml#/components/responses/NotFoundError'
        '500':
          $ref: '../openapi.yaml#/components/responses/ServerError'

    /attend:
      post:
        summary: Attend event
        description: Register to attend an event
        security:
          - BearerAuth: []
        responses:
          '200':
            description: Successfully registered for the event
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: Successfully registered for the event
          '400':
            $ref: '../openapi.yaml#/components/responses/ValidationError'
          '401':
            $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
          '404':
            $ref: '../openapi.yaml#/components/responses/NotFoundError'
          '409':
            $ref: '../openapi.yaml#/components/responses/ConflictError'
          '500':
            $ref: '../openapi.yaml#/components/responses/ServerError'

    /attendees:
      get:
        summary: Get event attendees
        description: Get list of attendees for an event
        security:
          - BearerAuth: []
        parameters:
          - $ref: '../openapi.yaml#/components/parameters/page'
          - $ref: '../openapi.yaml#/components/parameters/limit'
        responses:
          '200':
            description: List of attendees retrieved successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    data:
                      type: array
                      items:
                        $ref: '../components/schemas/User.yaml#/User'
                    pagination:
                      $ref: '../openapi.yaml#/components/schemas/Pagination'
          '401':
            $ref: '../openapi.yaml#/components/responses/UnauthorizedError'
          '404':
            $ref: '../openapi.yaml#/components/responses/NotFoundError'
          '500':
            $ref: '../openapi.yaml#/components/responses/ServerError' 
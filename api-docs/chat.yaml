openapi: 3.0.0
info:
  title: UNIverse Chat API
  description: |
    Chat management API for the UNIverse platform.
    This API provides endpoints for managing direct messages, group chats, and real-time messaging.
  version: 1.0.0
  contact:
    name: UNIverse Support
    email: support@universe.com

servers:
  - url: https://universe-backend-kpry.onrender.com/api
    description: Production server
  - url: http://localhost:5000/api
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Chat:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the chat
        type:
          type: string
          enum: [direct, group]
          description: Type of chat (direct message or group chat)
        name:
          type: string
          description: Name of the chat (for group chats)
        description:
          type: string
          description: Description of the chat (for group chats)
        participants:
          type: array
          items:
            $ref: '#/components/schemas/ChatParticipant'
        lastMessage:
          $ref: '#/components/schemas/Message'
        createdAt:
          type: string
          format: date-time
          description: When the chat was created
        updatedAt:
          type: string
          format: date-time
          description: When the chat was last updated

    ChatParticipant:
      type: object
      properties:
        user:
          type: string
          format: uuid
          description: Reference to the user
        role:
          type: string
          enum: [member, admin]
          description: Role in the chat (for group chats)
        joinedAt:
          type: string
          format: date-time
          description: When the user joined the chat
        lastRead:
          type: string
          format: date-time
          description: Timestamp of the last message read by the user

    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the message
        chat:
          type: string
          format: uuid
          description: Reference to the chat
        sender:
          type: string
          format: uuid
          description: Reference to the user who sent the message
        content:
          type: string
          description: Content of the message
        type:
          type: string
          enum: [text, image, file]
          description: Type of message content
        media:
          type: object
          properties:
            url:
              type: string
              format: uri
              description: URL of the media
            publicId:
              type: string
              description: Cloudinary public ID
        readBy:
          type: array
          items:
            type: string
            format: uuid
          description: List of user IDs who have read the message
        createdAt:
          type: string
          format: date-time
          description: When the message was sent
        updatedAt:
          type: string
          format: date-time
          description: When the message was last updated

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: Error message

    Success:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          description: Success message

paths:
  /chats:
    get:
      tags:
        - Chats
      summary: Get all chats
      description: Retrieve a list of all chats for the authenticated user
      security:
        - BearerAuth: []
      parameters:
        - name: type
          in: query
          description: Filter chats by type
          schema:
            type: string
            enum: [direct, group]
        - name: search
          in: query
          description: Search chats by name or participant
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of chats per page
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of chats retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  chats:
                    type: array
                    items:
                      $ref: '#/components/schemas/Chat'
                  pagination:
                    type: object
                    properties:
                      page:
                        type: integer
                      limit:
                        type: integer
                      total:
                        type: integer
                      pages:
                        type: integer
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Chats
      summary: Create a new chat
      description: Create a new direct message or group chat
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - type
              properties:
                type:
                  type: string
                  enum: [direct, group]
                name:
                  type: string
                  description: Required for group chats
                description:
                  type: string
                  description: Optional for group chats
                participants:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: List of user IDs to add to the chat
      responses:
        '201':
          description: Chat created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  chat:
                    $ref: '#/components/schemas/Chat'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chats/{chatId}:
    get:
      tags:
        - Chats
      summary: Get chat details
      description: Retrieve detailed information about a specific chat
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chat details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  chat:
                    $ref: '#/components/schemas/Chat'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Chats
      summary: Update chat details
      description: Update chat information (Admin only for group chats)
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Chat updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  chat:
                    $ref: '#/components/schemas/Chat'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Chats
      summary: Delete chat
      description: Delete a chat (Admin only for group chats)
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chat deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chats/{chatId}/messages:
    get:
      tags:
        - Messages
      summary: Get chat messages
      description: Retrieve messages for a specific chat
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
        - name: before
          in: query
          description: Get messages before this timestamp
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Number of messages to retrieve
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Messages
      summary: Send message
      description: Send a new message to the chat
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                type:
                  type: string
                  enum: [text, image, file]
                media:
                  type: string
                  format: binary
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    $ref: '#/components/schemas/Message'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chats/{chatId}/messages/{messageId}:
    put:
      tags:
        - Messages
      summary: Update message
      description: Update a message (Sender only)
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
        - name: messageId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Message updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    $ref: '#/components/schemas/Message'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized to update this message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat or message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Messages
      summary: Delete message
      description: Delete a message (Sender or Admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
        - name: messageId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Message deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized to delete this message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat or message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chats/{chatId}/participants:
    get:
      tags:
        - Chat Participants
      summary: Get chat participants
      description: Retrieve all participants in a chat
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Participants retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  participants:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatParticipant'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Chat Participants
      summary: Add participant
      description: Add a new participant to the chat (Admin only for group chats)
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  format: uuid
                role:
                  type: string
                  enum: [member, admin]
      responses:
        '201':
          description: Participant added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  participant:
                    $ref: '#/components/schemas/ChatParticipant'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chats/{chatId}/participants/{userId}:
    delete:
      tags:
        - Chat Participants
      summary: Remove participant
      description: Remove a participant from the chat (Admin only for group chats)
      security:
        - BearerAuth: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Participant removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Chat or participant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
